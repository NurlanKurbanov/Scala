val x = "value" //x уже нельзя менять, так как использовали val
//x = "new value" error: reassignment to val

//можно использовать функцию без параметров в кач переменной
def x = "value"
//такие переменные будут вычисляться какждый раз, когда на них ссылаются

//ленивые значения
//промежуточный вариант
lazy val x = "value"
//такая переменная будет вычислена не более одного раза,
// но тогда, когда сошлемся на нее в первый раз

//настоящие переменные
//в scala используют как можно реже
var x = "value"
x = "new value"
println(x) //new value


val x = 1
val y = 2
val z = x + y
println(z) //3


//переменные def и lazy val можно использовать выше их объявления
//но только при объявлениях в объектах/классах/трейтах, а внутри методов и функций так делать нельзя
object Test extends App {
  val zz = xx + yy //3
  println(zz)
  lazy val xx = 1
  lazy val yy = 2
}


//типы переменных можно указать явно
val x: Int = 1


//про присваивание через блоки
object Test extends App {
  val x = 5
  val y = {
    val x = 7
    x + 3
  }
  println(x + "," + y) //5,10
}